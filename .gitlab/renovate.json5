{
  extends: [
    'config:base',
    'docker:enableMajor',
    ':disableRateLimiting',
    ':dependencyDashboard',
    ':semanticCommits',
    ':enablePreCommit',
    ':automergeDigest',
    ':automergeBranch',
    'github>whitesource/merge-confidence:beta',
    'local>Alexsaphir/K3s-Flux//.gitlab/renovate/commitMessage.json5',
    'local>Alexsaphir/K3s-Flux//.gitlab/renovate/disabledDatasources.json5',
    'local>Alexsaphir/K3s-Flux//.gitlab/renovate/groups.json5',
    'local>Alexsaphir/K3s-Flux//.gitlab/renovate/labels.json5'
  ],
  enabled: true,
  semanticCommits: 'enabled',
  configWarningReuseIssue: true,
  configMigration: true,
  dependencyDashboard: true,
  dependencyDashboardTitle: 'Renovate Dashboard',
  suppressNotifications: [
    'prIgnoreNotification'
  ],
  rebaseWhen: 'behind-base-branch',
  schedule: [
    'before 1am'
  ],
  lockFileMaintenance: {
    enabled: true
  },
  poetry: {
    enabled: true
  },
  'pre-commit': {
    enabled: true
  },
  flux: {
    fileMatch: [
      'cluster/.+\\.ya?ml$'
    ]
  },
  'helm-values': {
    fileMatch: [
      'cluster/.+\\.ya?ml$'
    ]
  },
  kubernetes: {
    fileMatch: [
      'cluster/.+\\.ya?ml$',
      'provision/ansible/.+\\.ya?ml.j2$'
    ]
  },
  regexManagers: [
    {
      description: 'Process CRD dependencies',
      fileMatch: [
        'cluster/crds/.+\\.ya?ml$'
      ],
      matchStrings: [
        'registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n',
        'datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)/(?<currentValue>[^/]+)/[^/]+\n'
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}'
    },
    {
      description: 'Process various other dependencies',
      fileMatch: [
        'provision/ansible/.+\\.ya?ml$',
        'cluster/.+\\.ya?ml$'
      ],
      matchStrings: [
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?"(?<currentValue>.*)"\n'
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}',
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}'
    }
  ],
  packageRules: [
    {
      matchPackageNames: [
        "kube-prometheus-stack",
        "kube-prometheus-stack-crds"
      ],
      groupName: "kube-prometheus-stack"
    },
    {
      description: 'Use custom versioning for Minio',
      matchDatasources: [
        'docker'
      ],
      versioning: 'regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$',
      matchPackageNames: [
        'quay.io/minio/minio'
      ]
    },
    {
      matchDatasources: [
        'helm'
      ],
      separateMinorPatch: true,
      ignoreDeprecated: true
    },
    {
      matchDatasources: [
        'docker'
      ],
      enabled: true,
      commitMessageTopic: 'container image {{depName}}',
      commitMessageExtra: 'to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}',
      matchUpdateTypes: [
        'major',
        'minor',
        'patch'
      ]
    },
    {
      description: 'Group Cert-Manager image (for CRDs) and chart',
      groupName: 'Cert-Manager',
      matchPackagePatterns: [
        'cert-manager'
      ],
      matchDatasources: [
        'docker',
        'helm'
      ],
      group: {
        commitMessageTopic: '{{{groupName}}} group'
      },
      separateMinorPatch: true
    },
    {
      matchDatasources: [
        'docker'
      ],
      matchUpdateTypes: [
        'major'
      ],
      labels: [
        'renovate/image',
        'dep/major'
      ]
    },
    {
      matchDatasources: [
        'docker'
      ],
      matchUpdateTypes: [
        'minor'
      ],
      labels: [
        'renovate/image',
        'dep/minor'
      ]
    },
    {
      matchDatasources: [
        'docker'
      ],
      matchUpdateTypes: [
        'patch'
      ],
      labels: [
        'renovate/image',
        'dep/patch'
      ]
    },
    {
      matchDatasources: [
        'helm'
      ],
      matchUpdateTypes: [
        'major'
      ],
      labels: [
        'renovate/helm',
        'dep/major'
      ]
    },
    {
      matchDatasources: [
        'helm'
      ],
      matchUpdateTypes: [
        'minor'
      ],
      labels: [
        'renovate/helm',
        'dep/minor'
      ]
    },
    {
      matchDatasources: [
        'helm'
      ],
      matchUpdateTypes: [
        'patch'
      ],
      labels: [
        'renovate/helm',
        'dep/patch'
      ]
    }
  ]
}
