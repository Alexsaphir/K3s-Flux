---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app planka-prod
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    controllers:
      planka-prod:
        annotations:
          secret.reloader.stakater.com/reload: database-planka-prod, planka-prod-secret, planka-prod-oidc-secret

        containers:
          app:
            image:
              repository: ghcr.io/plankanban/planka
              tag: 1.21.1@sha256:68c97484643961e1a82d62df845c6c82aac90dd14267773ce57697b0d8ea1e93

            env:
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: database-planka-prod
                    key: POSTGRES_URL
              BASE_URL:
                value: '{{ printf "https://%s" (first .Values.ingress.app.hosts).host }}'
              TRUST_PROXY: 1

              OIDC_ENFORCED: 'true'
              OIDC_SCOPES: openid profile email
              OIDC_IGNORE_ROLES: 'true'

              ALLOW_ALL_TO_CREATE_PROJECTS: 'true'

              # Email Notifications (https://nodemailer.com/smtp/)
              # - SMTP_HOST=
              # - SMTP_PORT=587
              # - SMTP_SECURE=true
              # - SMTP_USER=
              # - SMTP_PASSWORD=
              # - SMTP_FROM="Demo Demo" <demo@demo.demo>

              # - SLACK_BOT_TOKEN=
              # - SLACK_CHANNEL_ID=

            envFrom:
              - secretRef:
                  name: planka-prod-secret
              - secretRef:
                  name: planka-prod-oidc-secret

            probes:
              liveness: &probe
                type: HTTP
                path: /
              readiness: *probe

            resources:
              requests:
                cpu: 10m
                memory: 250Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ 'ALL' ] }

    service:
      app:
        controller: *app
        ports:
          http:
            port: 1337

    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
          hajimari.io/enable: 'true'
          hajimari.io/icon: 'mdi:ticket'
        hosts:
          - host: plan.${DOMAIN_NAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: planka-prod
        globalMounts:
          - path: /app/public/user-avatars
            subPath: user-avatars
          - path: /app/public/project-background-images
            subPath: project-background-images
          - path: /app/private/attachments
            subPath: attachments

      tmp:
        type: emptyDir
        globalMounts:
          - path: /app/logs
