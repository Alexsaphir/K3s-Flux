---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gitlab
spec:
  interval: 15m
  chart:
    spec:
      chart: gitlab
      version: 8.0.1
      sourceRef:
        kind: HelmRepository
        name: gitlab
        namespace: flux-charts
      interval: 15m

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  valuesFrom:
    - kind: Secret
      name: &db-secret database-gitlab-staging
      valuesKey: HOST
      targetPath: global.psql.main.host
    - kind: Secret
      name: *db-secret
      valuesKey: DATABASE_NAME
      targetPath: global.psql.main.database
    - kind: Secret
      name: *db-secret
      valuesKey: LOGIN
      targetPath: global.psql.main.username

    - kind: Secret
      name: &db-ci-secret database-gitlab-ci-staging
      valuesKey: HOST
      targetPath: global.psql.ci.host
    - kind: Secret
      name: *db-ci-secret
      valuesKey: DATABASE_NAME
      targetPath: global.psql.ci.database
    - kind: Secret
      name: *db-ci-secret
      valuesKey: LOGIN
      targetPath: global.psql.ci.username


  # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/values.yaml
  values:
    # Please read the docs: https://docs.gitlab.com/charts/
    ## Advanced Configuration
    ## https://docs.gitlab.com/charts/advanced
    #
    # Documentation for advanced configuration, such as
    # - External PostgreSQL
    # - External Gitaly
    # - External Redis
    # - External NGINX
    # - External Object Storage providers
    # - PersistentVolume configuration

    ## The global properties are used to configure multiple charts at once.
    ## https://docs.gitlab.com/charts/charts/globals
    global:
      common:
        labels: { }
      pod:
        labels: { }

      edition: ee
      time_zone: ${TIMEZONE}
      extraEnv:
        GITLAB_LOG_LEVEL: 'error'
        GITLAB_ALLOW_SEPARATE_CI_DATABASE: 1


      ## https://docs.gitlab.com/charts/charts/globals#configure-host-settings
      hosts:
        domain: ${DOMAIN_NAME}
        hostSuffix: staging # TODO: replace to `hostSuffix:` alone when production ready
        https: true
        tls:
          enabled: false

      ## https://docs.gitlab.com/charts/charts/globals#configure-ingress-settings
      ingress:
        configureCertmanager: false
        useNewIngressForCerts: false
        provider: traefik
        annotations:
          auth.home.arpa/disabled: 'true'
        enabled: true

      # Override enablement of ServiceMonitor and PodMonitor objects.
      monitoring:
        enabled: true

      gitlab:
      # license:
      #   secret: gitlab-license-secret
      #   key: license

      ## Secret created according to https://docs.gitlab.com/charts/installation/secrets#initial-root-password
      initialRootPassword:
        secret: gitlab-admin-secret
        key: initialRootPassword

      ## https://docs.gitlab.com/charts/charts/globals#configure-postgresql-settings
      psql:
        main:
          password:
            useSecret: true
            secret: *db-secret
            key: PASSWORD
        ci:
          enabled: true
          password:
            useSecret: true
            secret: *db-ci-secret
            key: PASSWORD

      ## https://docs.gitlab.com/charts/charts/globals#configure-redis-settings
      #      redis:
      #        host: gitlab-dragonfly.gitlab.svc.cluster.local
      #        auth:
      #          enabled: false

      ## https://docs.gitlab.com/charts/charts/globals#configure-gitaly-settings
      gitaly:
        enabled: true
        authToken:
          secret: gitlab-gitaly-secret
          key: authToken
        internal:
          names: [ default ]
        external: [ ]

      ## https://docs.gitlab.com/charts/charts/globals#configure-praefect-settings
      praefect:
        enabled: false

      ## https://docs.gitlab.com/charts/charts/globals#configure-minio-settings
      minio:
        enabled: true
        credentials: { } # Todo: fill this
        # secret:

      ## https://docs.gitlab.com/charts/charts/globals#configure-appconfig-settings
      appConfig:
        ## https://docs.gitlab.com/charts/charts/globals#general-application-settings
        enableUsagePing: false
        enableSeatLink: false
        enableImpersonation: true
        usernameChangingEnabled: false

        ## https://docs.gitlab.com/charts/charts/globals#content-security-policy
        contentSecurityPolicy:
          enabled: true
          report_only: false

        ## https://docs.gitlab.com/charts/charts/globals#lfs-artifacts-uploads-packages-external-mr-diffs-and-dependency-proxy
        object_store:
          enabled: true
          proxy_download: true
        lfs:
          enabled: true
          bucket: gitlab-lfs
        artifacts:
          enabled: true
          bucket: gitlab-artifacts
        uploads:
          enabled: true
          bucket: gitlab-uploads
        packages:
          enabled: true
          bucket: gitlab-packages
        externalDiffs:
          enabled: true
          when: outdated
          bucket: gitlab-external-diffs
        terraformState:
          enabled: true
          bucket: gitlab-terraform-state
        ciSecureFiles:
          enabled: true
          bucket: gitlab-ci-secure-files
        dependencyProxy:
          enabled: true
          bucket: gitlab-dependency-proxy
        backups:
          bucket: gitlab-backups
          tmpBucket: gitlab-tmp

        ## https://docs.gitlab.com/charts/charts/globals#kas-settings
        gitlab_kas:
          enabled: true
          secret: gitlab-kas-secret
          key: kas_shared_secret

        ## https://docs.gitlab.com/charts/charts/globals#omniauth
        omniauth: # TODO: this
          enabled: false
          autoSignInWithProvider:
          syncProfileFromProvider: [ ]
          syncProfileAttributes: [ email ]
          allowSingleSignOn: [ saml ]
          blockAutoCreatedUsers: true
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: [ ]
          externalProviders: [ ]
          allowBypassTwoFactor: [ ]
          providers: [ ]
          # - secret: gitlab-google-oauth2
          #   key: provider

        gitlab_docs:
          enabled: false

        smartcard:
          enabled: false

        sidekiq:
          routingRules: [ ]

        # Config that only applies to the defaults on initial install
        initialDefaults: { }
        # signupEnabled:
      ## End of global.appConfig

      oauth:
        gitlab-pages:
          secret: oauth-gitlab-pages-secret
          appIdKey: appId
          appSecretKey: appSecret
          # redirectUri: redirectUri
          # authScope: authScope

      ## https://docs.gitlab.com/charts/charts/gitlab/kas/
      kas:
        enabled: true

      ## https://docs.gitlab.com/charts/charts/gitlab/spamcheck/
      spamcheck:
        enabled: false

      ## https://docs.gitlab.com/charts/charts/globals#configure-gitlab-shell
      shell:
        authToken:
          secret: gitlab-shell-secret
          key: secret
        hostKeys:
          secret: gitlab-shell-host-keys
        ## https://docs.gitlab.com/charts/charts/globals#tcp-proxy-protocol
        tcp:
          proxyProtocol: false

      ## Rails application secrets
      ## Secret created according to https://docs.gitlab.com/charts/installation/secrets#gitlab-rails-secret
      ## If allowing shared-secrets generation, this is OPTIONAL.
      railsSecrets:
        secret: gitlab-rails-secret

      ## Rails generic setting, applicable to all Rails-based containers
      rails:
        bootsnap: # Enable / disable Shopify/Bootsnap cache
          enabled: true

      ## https://docs.gitlab.com/charts/charts/globals#configure-registry-settings
      registry:
        bucket: gitlab-registry

        certificate: { }
        # secret:
        httpSecret:
          secret: gitlab-registry-httpsecret
          key: secret
        notificationSecret:
          secret: gitlab-registry-notification
          key: secret
        tls:
          enabled: false
          # secretName:
        redis:
          cache:
            password: { }
        # https://docs.docker.com/registry/notifications/#configuration
        notifications: { }

        # Settings utilized by other services referencing registry:
        enabled: true
        host:
        # port: 443
        api:
          protocol: http
          serviceName: registry
          port: 5000
        tokenIssuer: gitlab-issuer

      pages:
        enabled: true
        accessControl: true
        path:
        host:
        port:
        https: # default true
        externalHttp: [ ]
        externalHttps: [ ]
        artifactsServer: true
        localStore:
          enabled: false
          # path: /srv/gitlab/shared/pages
        objectStore:
          enabled: true
          bucket: gitlab-pages
          # proxy_download: true
          connection: { }
          # secret:
          # key:
        apiSecret:
          secret: gitlab-pages-secret
          key: shared_secret
        authSecret: { }
        # secret:
        # key:

      ## GitLab Runner
      ## Secret created according to https://docs.gitlab.com/charts/installation/secrets#gitlab-runner-secret
      ## If allowing shared-secrets generation, this is OPTIONAL.
      runner:
        registrationToken: { }
        # secret:

      ## https://docs.gitlab.com/charts/charts/globals#outgoing-email
      ## Outgoing email server settings
      smtp:
        enabled: false
        address: smtp.mailgun.org
        port: 2525
        user_name: ""
        ## https://docs.gitlab.com/charts/installation/secrets#smtp-password
        password:
          secret: ""
          key: password
        # domain:
        authentication: "plain"
        starttls_auto: false
        openssl_verify_mode: "peer"
        open_timeout: 30
        read_timeout: 60
        pool: false

      ## https://docs.gitlab.com/charts/charts/globals#outgoing-email
      ## Email persona used in email sent by GitLab
      email:
        from: ""
        display_name: GitLab
        reply_to: ""
        subject_suffix: ""
        smime:
          enabled: false
          secretName: ""
          keyName: "tls.key"
          certName: "tls.crt"


      ## Global Service Annotations and Labels
      service:
        labels: { }
        annotations: { }

      ## Global Deployment Annotations
      deployment:
        annotations: { }


      # Setting a global nodeAffinity only applies to the registry chart for now.
      # See issue https://gitlab.com/gitlab-com/gl-infra/production-engineering/-/issues/25403 for more information

      nodeAffinity:

      antiAffinity: soft
      affinity:
        podAntiAffinity:
          topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          key: topology.kubernetes.io/zone
          values: [ ]


      ## https://docs.gitlab.com/charts/charts/globals#configure-workhorse-settings
      ## Global settings related to Workhorse
      workhorse:
        serviceName: webservice-default
        # scheme:
        # host:
        # port:
        ## https://docs.gitlab.com/charts/installation/secrets#gitlab-workhorse-secret
        secret: gitlab-workhorse-secret
        key: shared_secret
        tls:
          enabled: false

      ## https://docs.gitlab.com/charts/charts/globals#custom-certificate-authorities
      # configuration of certificates container & custom CA injection
      certificates:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/certificates
          # Default tag is `global.gitlabVersion` or `master` if the former one is undefined.
          # tag: master
          # pullPolicy: IfNotPresent
          # pullSecrets: []
        customCAs: [ ]
        # - secret: custom-CA
        # - secret: more-custom-CAs
        #   keys:
        #     - custom-ca-1.crt
        # - configMap: custom-CA-cm
        # - configMap: more-custom-CAs-cm
        #   keys:
        #     - custom-ca-2.crt
        #     - custom-ca-3.crt

      ## kubectl image used by hooks to carry out specific jobs
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          # Default tag is `global.gitlabVersion` or `master` if the former one is undefined.
          # tag: master
          # pullPolicy: IfNotPresent
          # pullSecrets: []
        securityContext:
          # in most base images, this is `nobody:nogroup`
          runAsUser: 65534
          fsGroup: 65534
      gitlabBase:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-base
          # Default tag is `global.gitlabVersion` or `master` if the former one is undefined.
          # Charts using this image as init container support further overrides with `init.image.tag`.
          # tag: master
          # pullPolicy: IfNotPresent
          # pullSecrets: []

      ## https://docs.gitlab.com/charts/charts/globals#service-accounts
      serviceAccount:
        enabled: false
        create: true
        annotations: { }
        ## Name to be used for serviceAccount, otherwise defaults to chart fullname
        # name:

      ## https://docs.gitlab.com/charts/charts/globals/#tracing
      tracing:
        connection:
          string: ""
        urlTemplate: ""

      zoekt:
        gateway:
          basicAuth:
            secretName: gitlab-zoekt-basicauth
        indexer:
          internalApi: { }


      ## https://docs.gitlab.com/charts/charts/globals
      extraEnvFrom: { }
      #   MY_NODE_NAME:
      #     fieldRef:
      #       fieldPath: spec.nodeName
      #   MY_CPU_REQUEST:
      #     resourceFieldRef:
      #       containerName: test-container
      #       resource: requests.cpu
      #   SECRET_THING:
      #     secretKeyRef:
      #       name: special-secret
      #       key: special_token
      #       # optional: boolean
      #   CONFIG_STRING:
      #     configMapKeyRef:
      #       name: useful-config
      #       key: some-string
      #       # optional: boolean

      ## https://docs.gitlab.com/charts/charts/globals/#jobs
      job:
        nameSuffixOverride:
    ## End of global

    upgradeCheck:
      enabled: true
      image: { }
      # repository:
      # tag:
      # pullPolicy: IfNotPresent
      # pullSecrets: []
      securityContext:
        # in alpine/debian/busybox based images, this is `nobody:nogroup`
        runAsUser: 65534
        fsGroup: 65534
      tolerations: [ ]
      annotations: { }
      configMapAnnotations: { }
      resources:
        requests:
          cpu: 50m
      priorityClassName: ""


    certmanager:
      installCRDs: false
      install: false
    nginx-ingress:
      enabled: false
    haproxy:
      install: false
    prometheus:
      install: false
    redis:
      install: true
    postgresql:
      install: false
    traefik:
      install: false

    ## Installation & configuration charts/registry
    ## https://docs.gitlab.com/charts/architecture/decisions#registry
    ## https://docs.gitlab.com/charts/charts/registry/
    registry:
      enabled: true

    ## Automatic shared secret generation
    ## https://docs.gitlab.com/charts/installation/secrets
    ## https://docs.gitlab.com/charts/charts/shared-secrets.html
    #    shared-secrets:
    #      enabled: false

    ## Installation & configuration of gitlab/gitlab-runner
    ## See requirements.yaml for current version
    gitlab-runner:
      install: false
      rbac:
        create: true
      runners:
        locked: false
        # Set secret to an arbitrary value because the runner chart renders the gitlab-runner.secret template only if it is not empty.
        # The parent/GitLab chart overrides the template to render the actual secret name.
        secret: "nonempty"
        config: |
          [[runners]]
            [runners.kubernetes]
            image = "ubuntu:22.04"
            {{- if .Values.global.minio.enabled }}
            [runners.cache]
              Type = "s3"
              Path = "gitlab-runner"
              Shared = true
              [runners.cache.s3]
                ServerAddress = {{ include "gitlab-runner.cache-tpl.s3ServerAddress" . }}
                BucketName = "runner-cache"
                BucketLocation = "us-east-1"
                Insecure = false
            {{ end }}
      podAnnotations:
        gitlab.com/prometheus_scrape: "true"
        gitlab.com/prometheus_port: 9252


    ## Settings for individual sub-charts under GitLab
    ## Note: Many of these settings are configurable via globals
    gitlab:
      ## https://docs.gitlab.com/charts/charts/gitlab/toolbox
      toolbox:
        replicas: 1
        antiAffinityLabels:
          matchLabels:
            app: gitaly
      ## https://docs.gitlab.com/charts/charts/gitlab/migrations
      #   migrations:
      #     enabled: false
      ## https://docs.gitlab.com/charts/charts/gitlab/webservice
      #   webservice:
      #     enabled: false
      ## https://docs.gitlab.com/charts/charts/gitlab/sidekiq
      #   sidekiq:
      #     enabled: false
      ## https://docs.gitlab.com/charts/charts/gitlab/gitaly
      #   gitaly:
      ## https://docs.gitlab.com/charts/charts/gitlab/gitlab-shell
      #   gitlab-shell:
      #     enabled: false
      ## https://docs.gitlab.com/charts/charts/gitlab/gitlab-pages
      gitlab-pages:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi

      ## https://docs.gitlab.com/charts/charts/gitlab/kas
      #   kas:


    ## Installation & configuration of gitlab/gitlab-zoekt
    gitlab-zoekt:
      install: true
      gateway:
        basicAuth:
          enabled: true
          secretName: '{{ include "gitlab.zoekt.gateway.basicAuth.secretName" $ }}'
      indexer:
        internalApi:
          enabled: true
          secretName: '{{ include "gitlab.zoekt.indexer.internalApi.secretName" $ }}'
          secretKey: '{{ include "gitlab.zoekt.indexer.internalApi.secretKey" $ }}'
          gitlabUrl: '{{ include "gitlab.zoekt.indexer.internalApi.gitlabUrl" $ }}'
