---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jupyterhub
  namespace: jupyterhub
spec:
  interval: 15m
  chart:
    spec:
      chart: jupyterhub
      version: 3.0.2
      sourceRef:
        kind: HelmRepository
        name: jupyterhub
        namespace: flux-charts
      interval: 15m

  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  valuesFrom:
    - kind: Secret
      name: jupyterhub-secret
      targetPath: hub.cookieSecret
      valuesKey: cookie
    - kind: Secret
      name: database-jupyterhub
      targetPath: hub.db.url
      valuesKey: POSTGRES_URL

    - kind: Secret
      name: jupyterhub-secret
      targetPath: hub.config.LDAPAuthenticator.bind_user_password
      valuesKey: ldap_search

  values:
    hub:
      image:
        name: registry.alexsaphir.com/homelab/containers/jupyter/k8s-hub
        tag: 2.0.0
      # existingSecret:
      activeServerLimit: 0
      allowNamedServers: true
      concurrentSpawnLimit: 10

      db:
        type: postgres
        upgrade: true

      config:
        JupyterHub:
          admin_access: false
          authenticator_class: ldapauthenticator.LDAPAuthenticator
          # authenticator_class: dummy
          # subdomain_host: https://jupyter.${SECRET_DOMAIN_NAME}


        LDAPAuthenticator:
          server_hosts:
            - 'glauth.kube-auth.svc.cluster.local'
          server_use_ssl: false

          bind_user_dn: 'cn=search_jupyter,ou=svcaccts,dc=home,dc=arpa'

          user_search_base: 'ou=jupyter,ou=users,dc=home,dc=arpa'
          user_search_filter: '(&(objectClass=posixAccount)(uid={username}))'

          user_membership_attribute: memberOf
          group_search_base: 'ou=jupyter,ou=groups,dc=home,dc=arpa'
          group_search_filter: '(&(objectClass=groupOfUniqueNames)(memberOf={group}))'

          allowed_groups:
            - ou=jupyter,ou=groups,dc=home,dc=arpa

          create_user_home_dir: false

      nodeSelector:
        kubernetes.io/arch: amd64

    singleuser:
      defaultUrl: "/lab"

      image:
        name: jupyter/scipy-notebook
        tag: 82ce73789ba4

      profileList:
        - display_name: "Bloody env"
          description: "Homelab."
          default: true
          kubespawner_override:
            image: registry.alexsaphir.com/homelab/containers/jupyter/notebook@sha256:7362cfeb403cc3c56febf45eaf1a6080c9aa3fe9d504d7f12365cdbb0418d10c
            node_selector: { 'node.kubernetes.io/instance-type': 'm3.large' }


      # - display_name: "Minimal environment"
      #   description: "To avoid too much bells and whistles: Python."
      #   kubespawner_override:
      #     image: jupyter/minimal-notebook:82ce73789ba4

      # - display_name: "Datascience environment"
      #   description: "If you want the additional bells and whistles: Python, R, and Julia."

      # - display_name: "Spark environment"
      #   description: "The Jupyter Stacks spark image!"
      #   kubespawner_override:
      #     image: jupyter/all-spark-notebook:2343e33dec46

      #        - display_name: "Bloody TPU"
      #          description: "Homelab."
      #          default: true
      #          kubespawner_override:
      #            image: registry.alexsaphir.com/alexsaphir/k3s-flux/jupyter/notebook-tpu
      #            extra_resource_limits:
      #              nvidia.com/gpu: "1"

      # - display_name: "Haskell environment"
      #   description: "The Jupyter Stacks ihaskell"
      #   kubespawner_override:
      #     image: ghcr.io/jamesdbrock/ihaskell-notebook:master

      # - display_name: "Learning Data Science"
      #   description: "Datascience Environment with Sample Notebooks"
      #   kubespawner_override:
      #     image: jupyter/datascience-notebook:2343e33dec46

      extraEnv:
        EDITOR: "nano"
      #        JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"

      storage:
        capacity: 2Gi
        homeMountPath: /home/jovyan/workspace
        dynamic:
          storageClass: longhorn
    #          storageAccessModes: [ ReadWriteMany ]

    proxy:
      service:
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${LB_JUPYTER}
    scheduling:
      userScheduler:
        enabled: false

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hajimari.io/icon: simple-icons:jupyter
        auth.home.arpa/disabled: "true"
      hosts:
        - "jupyter.${SECRET_DOMAIN_NAME}"
