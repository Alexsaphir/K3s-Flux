---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: semaphore
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    defaultPodOptions:
      securityContext:
        seccompProfile: { type: RuntimeDefault }

    controllers:
      semaphore:
        annotations:
          reloader.stakater.com/auto: 'true'

        containers:
          app:
            image:
              repository: semaphoreui/semaphore
              tag: v2.12.12@sha256:3458081cdb00e731a00a587ebd14a87078c1f05c080af7f015ebfa17227de261

            envFrom:
              - secretRef:
                  name: semaphore-secret

            env:
              SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
              SEMAPHORE_PORT: &port 3000

              SEMAPHORE_LDAP_ACTIVATED: 'yes'
              SEMAPHORE_LDAP_HOST: lldap.kube-auth.svc.cluster.local
              SEMAPHORE_LDAP_PORT: '389'
              SEMAPHORE_LDAP_NEEDTLS: false
              SEMAPHORE_LDAP_DN_BIND: uid=search,ou=people,dc=home,dc=arpa

              SEMAPHORE_LDAP_DN_SEARCH: ou=people,dc=home,dc=arpa
              SEMAPHORE_LDAP_SEARCH_FILTER: '(&(uid=%s)(memberOf=cn=semaphore,ou=groups,dc=home,dc=arpa))'

              SEMAPHORE_LDAP_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: semaphore-ldap-search
                    key: password


              SEMAPHORE_DB_DIALECT: postgres
              SEMAPHORE_DB_PORT: '5432'
              SEMAPHORE_DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: database-semaphore
                    key: LOGIN
              SEMAPHORE_DB_PASS:
                valueFrom:
                  secretKeyRef:
                    name: database-semaphore
                    key: PASSWORD
              SEMAPHORE_DB_HOST:
                valueFrom:
                  secretKeyRef:
                    name: database-semaphore
                    key: HOST
              SEMAPHORE_DB:
                valueFrom:
                  secretKeyRef:
                    name: database-semaphore
                    key: DATABASE_NAME

            resources:
              requests:
                cpu: 10m
                memory: 50Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: [ 'ALL' ] }

    service:
      app:
        controller: semaphore
        ports:
          http:
            port: *port

    ingress:
      app:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
          hajimari.io/icon: mdi:ansible
        hosts:
          - host: semaphore.${DOMAIN_NAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
