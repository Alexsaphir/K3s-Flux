---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app planka
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    oidc:
      issuerUrl: https://auth.${DOMAIN_NAME}
      admin:
        roles:
          - planka-admin

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    controllers:
      planka:
        annotations:
          secret.reloader.stakater.com/reload: database-planka, planka-secret, planka-oidc-secret

        containers:
          app:
            image:
              repository: ghcr.io/plankanban/planka
              tag: 1.23.5@sha256:d75590babe0b12df953f67efea73c61d068367e29bc2fb679ccda4ed8ccc00a1

            env:
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: database-planka
                    key: POSTGRES_URL
              BASE_URL:
                value: '{{ printf "https://%s" (first .Values.ingress.app.hosts).host }}'
              TRUST_PROXY: 1

              OIDC_ENFORCED: 'true'
              OIDC_ISSUER:
                value: '{{ .Values.oidc.issuerUrl}}'
              OIDC_SCOPES: openid profile groups email
              OIDC_ADMIN_ROLES: planka-admin
              OIDC_ROLES_ATTRIBUTE: groups

              ALLOW_ALL_TO_CREATE_PROJECTS: 'true'

              # Email Notifications (https://nodemailer.com/smtp/)
              SMTP_HOST: mailpit.mail.svc.cluster.local
              SMTP_PORT: 1025
              SMTP_SECURE: false
              SMTP_FROM: 'Planka <planka@domain.com>'

              # - SLACK_BOT_TOKEN=
              # - SLACK_CHANNEL_ID=

            envFrom:
              - secretRef:
                  name: planka-secret
              - secretRef:
                  name: planka-oidc-secret

            probes:
              liveness: &probe
                type: HTTP
                path: /
              readiness: *probe

            resources:
              requests:
                cpu: 10m
                memory: 250Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ 'ALL' ] }

    service:
      app:
        controller: *app
        ports:
          http:
            port: 1337

    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
          hajimari.io/enable: 'true'
          hajimari.io/icon: 'mdi:ticket'
        hosts:
          - host: planka.${DOMAIN_NAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: planka
        globalMounts:
          - path: /app/public/user-avatars
            subPath: user-avatars
          - path: /app/public/project-background-images
            subPath: project-background-images
          - path: /app/private/attachments
            subPath: attachments

      tmp:
        type: emptyDir
        globalMounts:
          - path: /app/logs
