---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: zigbee2mqtt
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  dependsOn:
    - name: mosquitto
      namespace: home-automation

  values:
    defaultPodOptions:
      securityContext:
        seccompProfile: { type: RuntimeDefault }

      nodeSelector:
        zigbee.feature.node.kubernetes.io/sonoff: 'true'

    controllers:
      zigbee2mqtt:
        annotations:
          reloader.stakater.com/reload: 'zigbee2mqtt-secrets'
        containers:
          app:
            image:
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 1.37.1

            env:
              TZ: '${TIMEZONE}'
              ZIGBEE2MQTT_DATA: /config
              ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN: ISO_8601
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_API: 'false'
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_AVAILABILITY_PAYLOAD: 'false'

              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: info # debug
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT: '["console"]'

              ZIGBEE2MQTT_CONFIG_AVAILABILITY_ACTIVE_TIMEOUT: 60
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_PASSIVE_TIMEOUT: 2000

              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_LEGACY: 'false'
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_RETAIN: "true"

              ZIGBEE2MQTT_CONFIG_EXPERIMENTAL_NEW_API: "true"

              ZIGBEE2MQTT_CONFIG_FRONTEND_PORT: &http_port 8000
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: "https://zigbee2mqtt.${SECRET_DOMAIN_NAME}"
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT: "false"
              ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION: "true"
              ZIGBEE2MQTT_CONFIG_MQTT_KEEPALIVE: 60
              ZIGBEE2MQTT_CONFIG_MQTT_REJECT_UNAUTHORIZED: "true"
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtt://mosquitto.home-automation.svc.cluster.local
              ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 5
              ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: "false"
              ZIGBEE2MQTT_CONFIG_SERIAL_BAUDRATE: 115200
              ZIGBEE2MQTT_CONFIG_SERIAL_DISABLE_LED: "false"
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: &hostPath /dev/serial/by-id/usb-ITEAD_SONOFF_Zigbee_3.0_USB_Dongle_Plus_V2_20221101094102-if00
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: ezsp

            envFrom:
              - secretRef:
                  name: zigbee2mqtt-secrets

            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi

            securityContext:
              privileged: true
              readOnlyRootFilesystem: true
              capabilities:
                add: [ 'SYS_RAWIO' ]
              supplementalGroups:
                - 20 # dialout for /dev/ttyUSB0

          exporter:
            dependsOn: app

            image:
              repository: ghcr.io/kpetremann/mqtt-exporter
              tag: 1.4.2

            env:
              - { name: LOG_LEVEL, value: DEBUG }
              - { name: LOG_MQTT_MESSAGE, value: "True" }
              - { name: MQTT_ADDRESS, value: mosquitto.home-automation.svc.cluster.local }
              - { name: MQTT_TOPIC, value: "zigbee2mqtt/#" }
              - { name: MQTT_V5_PROTOCOL, value: "True" }
              - { name: PROMETHEUS_PORT, value: "8080" }
              - { name: PROMETHEUS_PREFIX, value: 'zigbee2mqtt_' }
              - { name: ZIGBEE2MQTT_AVAILABILITY, value: "True" }

            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ 'ALL' ] }

    service:
      app:
        controller: zigbee2mqtt
        ports:
          http:
            port: *http_port
          metrics:
            enabled: true
            port: 8080
          websocket:
            enabled: true
            port: 9000

    serviceMonitor:
      app:
        serviceName: zigbee2mqtt
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
            relabelings:
              - regex: "endpoint|container|job|instance|pod|prometheus|service|namespace"
                action: labeldrop

    ingress:
      app:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
          hajimari.io/icon: mdi:zigbee
        hosts:
          - host: "zigbee2mqtt.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      usb:
        enabled: true
        type: hostPath
        hostPathType: CharDevice
        hostPath: *hostPath
        advancedMounts:
          zigbee2mqtt:
            app:
              - path: *hostPath

      config:
        enabled: true
        existingClaim: zigbee2mqtt-data
        advancedMounts:
          zigbee2mqtt:
            app:
              - path: /config
