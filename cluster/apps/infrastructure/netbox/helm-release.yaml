---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: netbox
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: netbox
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bootc
        namespace: flux-charts
      interval: 15m

  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  valuesFrom:
    - targetPath: storageConfig.AWS_ACCESS_KEY_ID
      kind: Secret
      name: netbox-s3-secret
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: storageConfig.AWS_SECRET_ACCESS_KEY
      kind: Secret
      name: netbox-s3-secret
      valuesKey: AWS_SECRET_ACCESS_KEY
    - targetPath: storageConfig.AWS_S3_ENDPOINT_URL
      kind: Secret
      name: netbox-s3-secret
      valuesKey: AWS_ENDPOINT
    - targetPath: storageConfig.AWS_S3_REGION_NAME
      kind: Secret
      name: netbox-s3-secret
      valuesKey: AWS_REGION_NAME

    - targetPath: externalDatabase.host
      kind: Secret
      name: database-netbox
      valuesKey: HOST
    - targetPath: externalDatabase.database
      kind: Secret
      name: database-netbox
      valuesKey: DATABASE_NAME
    - targetPath: externalDatabase.username
      kind: Secret
      name: database-netbox
      valuesKey: LOGIN
    - targetPath: remoteAuth.ldap
      kind: Secret
      name: database-netbox
      valuesKey: LOGIN

  # https://github.com/bootc/netbox-chart/blob/develop/values.yaml
  values:
    replicaCount: 1

    image:
      repository: ghcr.io/netbox-community/netbox
      tag: v3.5.4

    housekeeping:
      enabled: false

    worker:
      enabled: false

    remoteAuth:
      enabled: true
      backend: netbox.authentication.LDAPBackend
      ldap:
        serverUri: "ldap://glauth.network-system.svc.cluster.local:389"
        startTls: false
        ignoreCertErrors: false
        bindDn: 'cn=search_netbox,ou=svcaccts,dc=home,dc=arpa'
        userDnTemplate: null
        userSearchBaseDn: 'ou=people,ou=users,dc=home,dc=arpa'
        userSearchAttr: 'uid'
        groupSearchBaseDn: 'ou=netbox,ou=groups,dc=home,dc=arpa'
        groupSearchClass: 'ou'
        groupType: 'GroupOfUniqueNamesType'
        requireGroupDn: ''
        findGroupPerms: true
        mirrorGroups: true
        mirrorGroupsExcept: null
        cacheTimeout: 3600
        isAdminDn: 'ou=netbox-admin,ou=groups,dc=home,dc=arpa'
        isSuperUserDn: 'cn=Alexsaphir,ou=people,ou=users,dc=home,dc=arpa'
        attrFirstName: 'givenName'
        attrLastName: 'sn'
        attrMail: 'mail'
    # plugins:
    #  - netbox_topology_views
    #  - netbox_ipcalculator
    #  - netbox_secretstore
    #  - nextbox_ui_plugin
    #  - netbox_qrcode
    #  - netbox_bgp

    existingSecret: netbox-secret

    superuser:
      name: admin
    napalm:
      username: napalm

    preferIPv4: true
    timeZone: "${CONFIG_TIMEZONE}"
    powerFeedDefaultAmperage: 15
    powerFeedDefaultVoltage: 230
    powerFeedMaxUtilisation: 80

    persistence:
      enabled: false
    reportsPersistence:
      enabled: false

    storageBackend: storages.backends.s3boto3.S3Boto3Storage
    storageConfig:
      AWS_STORAGE_BUCKET_NAME: netbox
      AWS_S3_ADDRESSING_STYLE: path

    postgresql:
      enabled: false
    externalDatabase:
      port: 5432
      existingSecretName: database-netbox
      existingSecretKey: PASSWORD

    redis:
      enabled: true

    podAnnotations:
      secret.reloader.stakater.com/reload: "netbox-secret,netbox-s3-secret"
      config.reloader.stakater.com/reload: netbox

    csrf:
      cookieName: csrftoken
      trustedOrigins:
        - https://netbox.${SECRET_DOMAIN_NAME}

    ingress:
      enabled: true
      className: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
      hosts:
        - host: &hostname netbox.${SECRET_DOMAIN_NAME}
          paths:
            - /

    allowedHosts:
      - *hostname

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/instance: netbox
                app.kubernetes.io/name: netbox
                app.kubernetes.io/component: netbox
            topologyKey: kubernetes.io/hostname
