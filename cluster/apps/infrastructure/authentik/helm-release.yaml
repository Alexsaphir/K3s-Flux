---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 2025.2.4
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  valuesFrom:
    - kind: Secret
      name: authentik-dragonfly-secret
      valuesKey: password
      targetPath: authentik.redis.password

  values:
    global:
      podAnnotations:
        reloader.stakater.com/auto: 'true'

      envFrom:
        - secretRef:
            name: authentik-secret
        - secretRef:
            name: authentik-bootstrap-secret

      env:
        # Postgres
        - name: AUTHENTIK_POSTGRESQL__HOST
          valueFrom:
            secretKeyRef:
              name: &db-secret database-authentik
              key: HOST
        - name: AUTHENTIK_POSTGRESQL__NAME
          valueFrom:
            secretKeyRef:
              name: *db-secret
              key: DATABASE_NAME
        - name: AUTHENTIK_POSTGRESQL__USER
          valueFrom:
            secretKeyRef:
              name: *db-secret
              key: LOGIN
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: *db-secret
              key: PASSWORD

        # S3
        - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
          value: s3
        - name: AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT
          value: minio.minio.svc.cluster.local

    authentik:
      log_level: info
      error_reporting:
        enabled: true

      email:
        from: "Authentik <authentik@domain.com>"
        host: mailpit.mail.svc.cluster.local
        port: 1025
        use_ssl: false

      redis:
        host: 'authentik-dragonfly.{{ .Release.Namespace }}.svc.cluster.local'

    server:
      name: server

      replicas: 2

      pdb:
        enabled: true
        minAvailable: 1
        maxUnavailable: 1

      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hosts:
          - "authentik.${DOMAIN_NAME}"
        paths: [ "/" ]
        pathType: Prefix

      metrics:
        serviceMonitor:
          enabled: true

      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi

    worker:
      replicas: 2

      pdb:
        enabled: true
        minAvailable: 1
        maxUnavailable: 1

      resources:
        requests:
          cpu: 50m
          memory: 512Mi
        limits:
          memory: 1Gi

    serviceAccount:
      # -- Create service account. Needed for managed outposts
      create: true

    prometheus:
      rules:
        enabled: true

    postgresql:
      enabled: false
    redis:
      enabled: false
