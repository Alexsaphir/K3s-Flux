---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gitlab-runner
spec:
  interval: 15m
  chart:
    spec:
      chart: gitlab-runner
      version: 0.74.1
      sourceRef:
        kind: HelmRepository
        name: gitlab
        namespace: flux-charts
      interval: 15m

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  valuesFrom:
    - kind: Secret
      name: gitlab-runner-secret
      valuesKey: &token runnerRegistrationToken #runnerToken
      targetPath: *token

  values:
    nameOverride: gitlab-runner

    podAnnotations:
      reloader.stakater.com/auto: 'true'

    revisionHistoryLimit: 1

    gitlabUrl: https://gitlab.${DOMAIN_NAME}/

    replicas: 1

    unregisterRunners: true

    concurrent: 2
    checkInterval: 10

    logLevel: info  # debug, info, warn, error, fatal, panic
    logFormat: json # runner, text, json

    rbac:
      create: true

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    service:
      enabled: true
    env:
      TZ: '${TIMEZONE}'

    extraEnv:
      CACHE_S3_SERVER_ADDRESS: s3.${DOMAIN_NAME}
      CACHE_S3_BUCKET_NAME: gitlab-runner
      CACHE_S3_BUCKET_LOCATION: us-east-1
      CACHE_SHARED: true
    extraEnvFrom:
      CACHE_S3_ACCESS_KEY:
        secretKeyRef:
          name: &s3secret gitlab-runner-s3access-secret
          key: accesskey
      CACHE_S3_SECRET_KEY:
        secretKeyRef:
          name: *s3secret
          key: secretkey

    runners:
      cache:
        secretName: *s3secret

      executor: kubernetes
      name: K3s

      # language=toml
      config: |
        [[runners]]
        name = "X8Dr9i-qb"
        environment = ["FF_GITLAB_REGISTRY_HELPER_IMAGE=true"]
        builds_dir = "/builds"

        [runners.feature_flags]
        FF_USE_ADVANCED_POD_SPEC_CONFIGURATION = true

        [runners.cache]
        Type = "s3"
        Shared = true
        [runners.cache.s3]
        ServerAddress = "s3.alexsaphir.com"
        BucketName = "gitlab-runner"
        BucketLocation = "us-east-1"
        AuthenticationType = "access-key"

        [runners.kubernetes]
        namespace = "{{.Release.Namespace}}"
        image = "ubuntu:22.04"

        [runners.kubernetes.affinity]
        [runners.kubernetes.affinity.node_affinity.required_during_scheduling_ignored_during_execution]
        [[runners.kubernetes.affinity.node_affinity.required_during_scheduling_ignored_during_execution.node_selector_terms]]
        [[runners.kubernetes.affinity.node_affinity.required_during_scheduling_ignored_during_execution.node_selector_terms.match_expressions]]
        key = "node-role.kubernetes.io/control-plane"
        operator = "DoesNotExist"


        [[runners.kubernetes.pod_spec]]
        name = "ephemeral-builds"
        patch_type = "strategic"
        patch = '''
                containers:
                - name: build
                  volumeMounts:
                  - name: builds
                    mountPath: /builds
                - name: helper
                  volumeMounts:
                  - name: builds
                    mountPath: /builds
                volumes:
                - name: builds
                  ephemeral:
                    volumeClaimTemplate:
                      spec:
                        storageClassName: openebs-hostpath
                        accessModes: [ ReadWriteOnce ]
                        resources:
                          requests:
                            storage: 8Gi
              '''

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
