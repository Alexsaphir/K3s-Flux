---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: codecov
spec:
  interval: 15m
  chart:
    spec:
      chart: codecov
      version: 5.0.0
      sourceRef:
        kind: HelmRepository
        name: codecov
        namespace: flux-charts
      interval: 15m

  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  valuesFrom:
    - kind: Secret
      name: codecov-secret
      valuesKey: enterprise_license
      targetPath: codecovConfig.setup.enterprise_license
    - kind: Secret
      name: codecov-secret
      valuesKey: cookie_secret
      targetPath: codecovConfig.setup.http.cookie_secret

    - kind: Secret
      name: codecov-gitlab-secret
      valuesKey: client_id
      targetPath: codecovConfig.gitlab_enterprise.client_id
    - kind: Secret
      name: codecov-gitlab-secret
      valuesKey: client_secret
      targetPath: codecovConfig.gitlab_enterprise.client_secret

    - kind: Secret
      name: codecov-s3-secret
      valuesKey: access_key
      targetPath: codecovConfig.services.minio.access_key_id
    - kind: Secret
      name: codecov-s3-secret
      valuesKey: secret_key
      targetPath: codecovConfig.services.minio.secret_access_key

    - kind: Secret
      name: database-codecov
      valuesKey: POSTGRES_URL
      targetPath: codecovConfig.services.database_url
    - kind: Secret
      name: database-codecov-timeseries
      valuesKey: POSTGRES_URL
      targetPath: codecovConfig.services.timeseries_database_url

  values:
    codecovVersion: latest-stable
    configmap:
      name: &configmap-name codecov-yml

    demo:
      enabled: false

    codecovConfig:
      github: null

      gitlab_enterprise:
        global_upload_token: 'glab-sph'
        url: 'https://gitlab.alexsaphir.com'

      services:
        minio:
          host: s3.alexsaphir.com
          bucket: codecov
          region: us-east-1
          verify_ssl: true

        redis_url: redis://codecov-redis-standalone.codecov.svc.cluster.local:6379
      setup:
        codecov_url: &codecov_url "https://codecov.${SECRET_DOMAIN_NAME}"
        codecov_api_url: *codecov_url

        admins:
          - service: gitlab_enterprise
            username: Saphir
          - service: gitlab_enterprise
            username: Alexsaphir
          - service: gitlab_enterprise
            username: &codecov-bot Codecov

      site:
        bot: *codecov-bot

    ingress:
      enabled: true
      annotations:
        # traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        auth.home.arpa/disabled: "true"
        hajimari.io/enable: "true"
      name: codecov-ingress
      pathtype: ImplementationSpecific
      className: traefik
      paths:
        root:
          path: /
          service: gateway
          port: 8080
      hosts:
        - &host codecov.${SECRET_DOMAIN_NAME}

    extraEnvs:
      - name: CODECOV_FRONTEND_IPV6_DISABLED
        value: 'true'

    tags:
      'configmap.reloader.stakater.com/reload': *configmap-name

    frontend:
      deployment:
        replicas: &replica-count 2
        env:
          - name: CODECOV_BASE_HOST
            value: *host
          - name: CODECOV_API_HOST
            value: *host
          - name: CODECOV_IA_HOST
            value: *host
          - name: CODECOV_SCHEME
            value: https
        resources:
          #      limits:
          #        cpu: 1000m
          #        memory: 2048M
          requests:
            cpu: 250m
            memory: 256M
      service:
        annotations: { }
        port: 8080
        type: &service-type ClusterIP
    gateway:
      deployment:
        replicas: *replica-count
        resources:
          #      limits:
          #        cpu: 1000m
          #        memory: 2048M
          requests:
            cpu: 250m
            memory: 256M
      service:
        annotations: { }
        port: 8080
        type: *service-type
    api:
      deployment:
        replicas: *replica-count
        resources:
          limits:
            cpu: 1000m
            memory: 2048M
          requests:
            cpu: 250m
            memory: 256M
      service:
        annotations: { }
        port: 8000
        type: *service-type

    worker:
      deployment:
        replicas: 2
        resources:
          limits:
            cpu: 3000m  # limit to number of CPU cores available if possible (1000 * cores)
            memory: 4096M
          requests:
            cpu: 500m
            memory: 1024M
