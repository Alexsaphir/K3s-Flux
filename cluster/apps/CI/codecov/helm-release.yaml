---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: codecov
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    codecovHost: &host codecov.${DOMAIN_NAME}

    codecov:
      # renovate: datasource=github-releases depName=codecov/codecov-api
      version: &codecovVersion 25.1.3

    codecovConfig:
      database:
        port: '5432'

    env: &global_env
      SETUP__CODECOV_URL: https://{{.Values.codecovHost }}
      SETUP__CODECOV_API_URL: https://{{.Values.codecovHost }}
      GITLAB_ENTERPRISE__URL: https://gitlab.${DOMAIN_NAME}

      SERVICES__REDIS_URL: redis://codecov-dragonfly.codecov.svc.cluster.local:6379

      SERVICES__MINIO__HOST: &minio-host minio.minio.svc.cluster.local
      SERVICES__MINIO__BUCKET: codecov
      SERVICES__MINIO__REGION: us-east-1
      SERVICES__MINIO__PORT: &minio-port 9000
      SERVICES__MINIO__VERIFY_SSL: false

      PUBSUB_EMULATOR_HOST: localhost

      SETUP__ENTERPRISE_LICENSE:
        valueFrom:
          secretKeyRef:
            name: codecov-secret
            key: enterprise_license

      SERVICES__DATABASE_URL:
        valueFrom:
          secretKeyRef:
            name: database-codecov
            key: POSTGRES_URL

      SETUP__HTTP__COOKIE_SECRET:
        valueFrom:
          secretKeyRef:
            name: codecov-secret
            key: cookie_secret


      GITLAB_ENTERPRISE__CLIENT_ID:
        valueFrom:
          secretKeyRef:
            name: codecov-gitlab-secret
            key: client_id

      GITLAB_ENTERPRISE__CLIENT_SECRET:
        valueFrom:
          secretKeyRef:
            name: codecov-gitlab-secret
            key: client_secret

      GITLAB_ENTERPRISE__BOT__KEY:
        valueFrom:
          secretKeyRef:
            name: codecov-gitlab-secret
            key: pat_token

      GITLAB_ENTERPRISE__GLOBAL_UPLOAD_SECRET:
        valueFrom:
          secretKeyRef:
            name: codecov-gitlab-secret
            key: global_upload_token


      SERVICES__MINIO__ACCESS_KEY_ID:
        valueFrom:
          secretKeyRef:
            name: codecov-s3-secret
            key: access_key
      SERVICES__MINIO__SECRET_ACCESS_KEY:
        valueFrom:
          secretKeyRef:
            name: codecov-s3-secret
            key: secret_key

    controllers:
      gateway:
        replicas: &replicas 1
        containers:
          app:
            image:
              repository: codecov/self-hosted-gateway
              tag: *codecovVersion
            env:
              CODECOV_GATEWAY_MINIO_ENABLED: true

              CODECOV_API_HOST: &host_api codecov-api-service.codecov.svc.cluster.local
              CODECOV_IA_HOST: *host_api

              CODECOV_DEFAULT_HOST: codecov-frontend-service.codecov.svc.cluster.local
              CODECOV_DEFAULT_PORT: 8080
              CODECOV_DEFAULT_SCHEME: http
              CODECOV_DEFAULT_HOST_HEADER: '%[req.hdr(Host)]'

              CODECOV_MINIO_HOST: *minio-host
              CODECOV_MINIO_PORT: *minio-port


            ports:
              - containerPort: &port_gateway 8080
                name: http
                protocol: TCP

            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /gateway_health
                    port: http
                  initialDelaySeconds: 30
                  failureThreshold: 3
                  periodSeconds: 10
                  timeoutSeconds: 5

              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /gateway_health
                    port: http
                  initialDelaySeconds: 10
                  failureThreshold: 3
                  successThreshold: 1
                  periodSeconds: 10
                  timeoutSeconds: 2

            resources:
              requests:
                cpu: 10m
                memory: 64M
              limits:
                cpu: 100m
                memory: 128M

      frontend:
        replicas: *replicas
        containers:
          app:
            image:
              repository: codecov/self-hosted-frontend
              tag: *codecovVersion
            env:
              CODECOV_BASE_HOST: *host
              CODECOV_API_HOST: *host
              CODECOV_IA_HOST: *host
              CODECOV_SCHEME: https
              CODECOV_FRONTEND_IPV6_DISABLED: true

            ports:
              - containerPort: &port_frontend 8080
                name: http
                protocol: TCP

            probes:
              liveness:
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: http
                  initialDelaySeconds: 30
                  failureThreshold: 3
                  periodSeconds: 10
                  timeoutSeconds: 5
              readiness:
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: http
                  initialDelaySeconds: 10
                  failureThreshold: 3
                  successThreshold: 1
                  periodSeconds: 10
                  timeoutSeconds: 2

            resources:
              requests:
                cpu: 10m
                memory: 16M
              limits:
                cpu: 100m
                memory: 128M

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: [ 'ALL' ] }

      api:
        replicas: *replicas
        containers:
          app:
            image:
              repository: codecov/self-hosted-api
              tag: 25.1.3

            env: *global_env

            ports:
              - containerPort: &port_api 8000
                name: http
                protocol: TCP

            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: http
                  initialDelaySeconds: 30
                  failureThreshold: 3
                  periodSeconds: 10
                  timeoutSeconds: 5
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: http
                  initialDelaySeconds: 10
                  failureThreshold: 3
                  successThreshold: 1
                  periodSeconds: 10
                  timeoutSeconds: 2

            resources:
              limits:
                cpu: 1000m
                memory: 2048M
              requests:
                cpu: 100m
                memory: 512M

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: [ 'ALL' ] }

      worker:
        replicas: *replicas
        containers:
          app:
            image:
              repository: codecov/self-hosted-worker
              tag: *codecovVersion
            env:
              RUN_ENV: ENTERPRISE
              <<: *global_env

            resources:
              limits:
                cpu: 1000m
                memory: 2048M
              requests:
                cpu: 100m
                memory: 768M

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: [ 'ALL' ] }

    service:
      gateway-service:
        controller: gateway
        ports:
          http:
            port: *port_gateway
      frontend-service:
        controller: frontend
        ports:
          http:
            port: *port_frontend
      api-service:
        controller: api
        ports:
          http:
            port: *port_api

    configMaps:
      config:
        data:
          # language=yaml
          codecov.yml: |
            gitlab_enterprise:
              bot:
                username: Codecov

            setup:
              debug: no
              loglvl: INFO

              guest_access: off
              admins:
                - service: gitlab_enterprise
                  username: Saphir
                - service: gitlab_enterprise
                  username: Alexsaphir

              http:
                cookies_domain: ${DOMAIN_NAME}

              timeseries:
                enabled: false

              telemetry:
                enabled: false

            notifications:
              slack: off
              gitter: off
              webhook: off
              irc: off
              hipchat: off

    ingress:
      app:
        className: traefik
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: mdi:source-branch-check
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: ImplementationSpecific
                service:
                  identifier: gateway-service
                  port: http

    persistence:
      config:
        enabled: true
        type: configMap
        name: codecov-config
        globalMounts:
          - path: /config/codecov.yml
            subPath: codecov.yml
            readOnly: false
