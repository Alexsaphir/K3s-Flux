---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tandoor-recipes
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  valuesFrom:
    - targetPath: tandoor.oauth.secret
      kind: Secret
      name: tandoor-recipes-oauth
      valuesKey: secret

  values:
    tandoor:
      oauth:
        client_id: tandoor-recipes

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch

    controllers:
      tandoor-recipes:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 1.5.31

            envFrom:
              - secretRef:
                  name: tandoor-recipes-secret
              - configMapRef:
                  name: tandoor-recipes-oauth-config
            env:
              TZ: '${TIMEZONE}'

              ALLOWED_HOSTS: &host recipes.${DOMAIN_NAME}
              SESSION_COOKIE_DOMAIN: *host
              SESSION_COOKIE_NAME: tandoor-recipes-sessionid

              DB_ENGINE: django.db.backends.postgresql
              POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: database-tandoor-recipes
                    key: HOST
              POSTGRES_PORT: '5432'
              POSTGRES_DB:
                valueFrom:
                  secretKeyRef:
                    name: database-tandoor-recipes
                    key: DATABASE_NAME
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: database-tandoor-recipes
                    key: LOGIN
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: database-tandoor-recipes
                    key: PASSWORD

              # S3 storage
              S3_BUCKET_NAME: recipes
              S3_REGION_NAME: us-east-1
              S3_QUERYSTRING_AUTH: 1
              S3_QUERYSTRING_EXPIRE: 3600
              S3_ENDPOINT_URL: https://s3.${DOMAIN_NAME}

              DEBUG: 0
              GUNICORN_MEDIA: 0
              ENABLE_SIGNUP: 0
              ENABLE_METRICS: 1
              ENABLE_PDF_EXPORT: 1

              # Users default preference
              FRACTION_PREF_DEFAULT: 1
              COMMENT_PREF_DEFAULT: 1
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5

              # Default settings for spaces
              SPACE_DEFAULT_MAX_RECIPES: 5000 # 0=unlimited recipes
              SPACE_DEFAULT_MAX_USERS: 0 # 0=unlimited users per space
              SPACE_DEFAULT_MAX_FILES: 512 # Maximum file storage for space in MB. 0 for unlimited, -1 to disable file upload.
              SPACE_DEFAULT_ALLOW_SHARING: 1 # Allow users to share recipes with public links

              SORT_TREE_BY_NAME: 1

              # LDAP auth
              LDAP_AUTH: 1
              AUTH_LDAP_SERVER_URI: ldap://lldap.kube-auth.svc.cluster.local:389
              AUTH_LDAP_BIND_DN: uid=search,ou=people,dc=home,dc=arpa
              AUTH_LDAP_USER_SEARCH_BASE_DN: ou=people,dc=home,dc=arpa

              AUTH_LDAP_ALWAYS_UPDATE_USER: 1
              AUTH_LDAP_CACHE_TIMEOUT: 3600
              AUTH_LDAP_USER_ATTR_MAP: "{'first_name': 'givenName', 'last_name': 'sn', 'email': 'mail' }"
              AUTH_LDAP_USER_SEARCH_FILTER_STR: '(&(&(objectclass=person)(memberOf=cn=recipes,ou=groups,dc=home,dc=arpa))(uid=%(user)s))'

              SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect

            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: [ 'ALL' ] }

    service:
      app:
        controller: tandoor-recipes
        ports:
          http:
            port: 8080

    ingress:
      app:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
          hajimari.io/icon: mdi:cookie
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    configMaps:
      oauth-config:
        data:

          # language=json
          SOCIALACCOUNT_PROVIDERS: |
            {
              "openid_connect": {
                "APPS": [
                  {
                    "provider_id": "authelia",
                    "name": "Authelia SSO",
                    "client_id": "{{ .Values.tandoor.oauth.client_id }}",
                    "secret": "{{ .Values.tandoor.oauth.secret }}",
                    "settings": {
                      "server_url": "https://auth.${DOMAIN_NAME}/.well-known/openid-configuration"
                    }
                  }
                ]
              }
            }

    persistence:
      static:
        enabled: true
        existingClaim: tandoor-recipes-static
        globalMounts:
          - path: /opt/recipes/staticfiles

      django-js-reverse:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /opt/recipes/cookbook/static/django_js_reverse

      tmp:
        type: emptyDir
