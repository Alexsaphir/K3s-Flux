---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thelounge
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  valuesFrom:
    - kind: Secret
      name: thelounge-ldap-search
      valuesKey: password
      targetPath: thelounge.ldap.bindPassword

  values:
    thelounge:
      public: false
      reverseProxy: true
      maxHistory: 10000
      theme: 'default'
      prefetch: false
      prefetchStorage: false
      prefetchMaxImageSize: 2048
      fileUpload:
        enable: false
        maxFileSize: 10240
        baseUrl: null
      leaveMessage: 'The Lounge - https://thelounge.chat'
      ldap:
        enable: true
        url: 'ldap://lldap.kube-auth.svc.cluster.local:389'
        primaryKey: 'uid'
        bindDn: 'uid=search,ou=people,dc=home,dc=arpa'
        # bindPassword:
        filter: '(memberOf=cn=thelounge,ou=groups,dc=home,dc=arpa)'
        searchSuffix: 'ou=people,dc=home,dc=arpa'
        scope: 'sub'

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    controllers:
      thelounge:
        annotations:
          reloader.stakater.com/auto: 'true'

        containers:
          app:
            image:
              repository: ghcr.io/thelounge/thelounge
              tag: 4.4.3@sha256:4a0ed50e04ea5300b4015a40126ce9d5eb247d9ef20b493ba26287cecda39ce3

            env:
              THELOUNGE_HOME: /config

            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 500Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ 'ALL' ] }

    configMaps:
      config:
        enabled: true
        data:
          config.js: |
            "use strict";
            module.exports = {
              public: {{ .Values.thelounge.public | toJson }},
              host: undefined,
              port: 9000,
              bind: undefined,
              reverseProxy: {{ .Values.thelounge.reverseProxy | toJson }},
              maxHistory: {{ .Values.thelounge.maxHistory | toJson }},
              https: {
                enable: false,
                key: "",
                certificate: "",
                ca: "",
              },
              theme: {{ .Values.thelounge.theme | toJson }},
              prefetch: {{ .Values.thelounge.prefetch | toJson }},
              prefetchStorage: {{ .Values.thelounge.prefetchStorage | toJson }},
              prefetchMaxImageSize: {{ .Values.thelounge.prefetchMaxImageSize | toJson }},
              fileUpload: {{ .Values.thelounge.fileUpload | toJson }},
              transports: ["polling", "websocket"],
              leaveMessage: {{ .Values.thelounge.leaveMessage | toJson }},
              defaults: {
                name: "Freenode",
                host: "chat.freenode.net",
                port: 6697,
                password: "",
                tls: true,
                rejectUnauthorized: true,
                nick: "thelounge%%",
                username: "thelounge",
                realname: "The Lounge User",
                join: "#thelounge",
              },
              lockNetwork: false,
              messageStorage: ["sqlite", "text"],
              useHexIp: false,
              webirc: null,
              identd: {
                enable: false,
                port: 113,
              },
              oidentd: null,
              ldap: {
                enable: {{ .Values.thelounge.ldap.enable | toJson }},
                url: {{ .Values.thelounge.ldap.url | toJson }},
                tlsOptions: {},
                primaryKey: {{ .Values.thelounge.ldap.primaryKey | quote }},
                searchDN: {
                  rootDN: {{ .Values.thelounge.ldap.bindDn | quote }},
                  rootPassword: {{ .Values.thelounge.ldap.bindPassword | quote }},
                  filter: {{ .Values.thelounge.ldap.filter | quote }},
                  base: {{ .Values.thelounge.ldap.searchSuffix | quote }},
                  scope: {{ .Values.thelounge.ldap.scope | quote }},
                },
              },
              debug: {
                ircFramework: false,
                raw: false,
              },
            };


    service:
      app:
        controller: thelounge
        ports:
          http:
            port: 9000

    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
          hajimari.io/enable: 'true'
          hajimari.io/icon: 'mdi:forum'
        hosts:
          - host: thelounge.${DOMAIN_NAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        enabled: true
        type: configMap
        name: thelounge-config
        globalMounts:
          - path: /config/config.js
            subPath: config.js
            readOnly: true

      config-vol:
        existingClaim: thelounge
        globalMounts:
          - path: /config
