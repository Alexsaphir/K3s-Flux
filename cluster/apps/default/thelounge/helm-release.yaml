---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thelounge
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts
      interval: 15m

  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  valuesFrom:
    - kind: Secret
      name: thelounge-ldap-search
      valuesKey: password
      targetPath: thelounge.ldap.bindPassword

  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/thelounge/thelounge
      tag: 4.4.1

    env:
      THELOUNGE_HOME: /config

    thelounge:
      public: false
      reverseProxy: true
      maxHistory: 10000
      theme: "default"
      prefetch: false
      prefetchStorage: false
      prefetchMaxImageSize: 2048
      fileUpload:
        enable: false
        maxFileSize: 10240
        baseUrl: null
      leaveMessage: "The Lounge - https://thelounge.chat"
      ldap:
        enable: true
        url: "ldap://glauth.network-system.svc.cluster.local:389"
        primaryKey: "uid"
        bindDn: "cn=search_thelounge,ou=svcaccts,dc=home,dc=arpa"
        # bindPassword:
        filter: "(objectClass=posixAccount)(memberOf=ou=thelounge,ou=groups,dc=home,dc=arpa)"
        searchSuffix: "ou=people,ou=users,dc=home,dc=arpa"
        scope: "sub"

    service:
      main:
        ports:
          http:
            port: 9000

    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
          hajimari.io/enable: 'true'
          hajimari.io/icon: 'mdi:forum'
        hosts:
          - host: thelounge.${SECRET_DOMAIN_NAME}
            paths:
              - path: /
                pathType: Prefix

    persistence:
      config:
        enabled: true
        type: configMap
        name: thelounge-config
        subPath: config.js
        mountPath: /config/config.js
        readOnly: true

    volumeClaimTemplates:
      - name: config-vol
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn

    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 500Mi

    configMaps:
      config:
        enabled: true
        data:
          config.js: |
            "use strict";
            module.exports = {
              public: {{ .Values.thelounge.public | toJson }},
              host: undefined,
              port: 9000,
              bind: undefined,
              reverseProxy: {{ .Values.thelounge.reverseProxy | toJson }},
              maxHistory: {{ .Values.thelounge.maxHistory | toJson }},
              https: {
                enable: false,
                key: "",
                certificate: "",
                ca: "",
              },
              theme: {{ .Values.thelounge.theme | toJson }},
              prefetch: {{ .Values.thelounge.prefetch | toJson }},
              prefetchStorage: {{ .Values.thelounge.prefetchStorage | toJson }},
              prefetchMaxImageSize: {{ .Values.thelounge.prefetchMaxImageSize | toJson }},
              fileUpload: {{ .Values.thelounge.fileUpload | toJson }},
              transports: ["polling", "websocket"],
              leaveMessage: {{ .Values.thelounge.leaveMessage | toJson }},
              defaults: {
                name: "Freenode",
                host: "chat.freenode.net",
                port: 6697,
                password: "",
                tls: true,
                rejectUnauthorized: true,
                nick: "thelounge%%",
                username: "thelounge",
                realname: "The Lounge User",
                join: "#thelounge",
              },
              lockNetwork: false,
              messageStorage: ["sqlite", "text"],
              useHexIp: false,
              webirc: null,
              identd: {
                enable: false,
                port: 113,
              },
              oidentd: null,
              ldap: {
                enable: {{ .Values.thelounge.ldap.enable | toJson }},
                url: {{ .Values.thelounge.ldap.url | toJson }},
                tlsOptions: {},
                primaryKey: {{ .Values.thelounge.ldap.primaryKey | quote }},
                searchDN: {
                  rootDN: {{ .Values.thelounge.ldap.bindDn | quote }},
                  rootPassword: {{ .Values.thelounge.ldap.bindPassword | quote }},
                  filter: {{ .Values.thelounge.ldap.filter | quote }},
                  base: {{ .Values.thelounge.ldap.searchSuffix | quote }},
                  scope: {{ .Values.thelounge.ldap.scope | quote }},
                },
              },
              debug: {
                ircFramework: false,
                raw: false,
              },
            };
