---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: your-spotify
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      server:
        strategy: &strat RollingUpdate
        rollingUpdate: &ru
          unavailable: 0

        pod: &pod
          annotations:
            reloader.stakater.com/auto: 'true'

        containers:
          app:
            image:
              repository: yooooomi/your_spotify_server
              tag: 1.11.0
            env:
              TIMEZONE: ${TIMEZONE}

              API_ENDPOINT: &api_endpoint https://spotify-api.${DOMAIN_NAME}
              CLIENT_ENDPOINT: https://spotify.${DOMAIN_NAME}
              MONGO_ENDPOINT: mongodb://your-spotify-ferretdb:27017/your_spotify

            envFrom:
              - secretRef:
                  name: your-spotify-secret

            probes: &probes
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: [ 'ALL' ] }

      web:
        strategy: *strat
        rollingUpdate: *ru
        pod: *pod

        containers:
          app:
            image:
              repository: yooooomi/your_spotify_client
              tag: 1.11.0

            env:
              TIMEZONE: ${TIMEZONE}
              API_ENDPOINT: *api_endpoint
            probes: *probes
            securityContext: *securityContext

      mongodb:
        type: statefulset
        rollingUpdate: *ru
        statefulset:
          podManagementPolicy: OrderedReady

        containers:
          app:
            image:
              repository: docker.io/library/mongo
              tag: 6.0.4-focal

            env:
              TZ: ${TIMEZONE}

            probes: *probes

      ferretdb:
        strategy: *strat
        rollingUpdate: *ru
        pod: *pod

        containers:
          app:
            image:
              repository: ghcr.io/ferretdb/ferretdb
              tag: 1.24.0

            env:
              FERRETDB_POSTGRESQL_URL:
                valueFrom:
                  secretKeyRef:
                    name: database-spotify
                    key: POSTGRES_URL

            securityContext: *securityContext

    service:
      server:
        controller: server
        primary: true
        ports:
          http:
            port: 8080
      web:
        controller: web
        ports:
          http:
            port: 3000
      mongodb:
        controller: mongodb
        ports:
          http:
            port: 27017
      ferretdb:
        controller: ferretdb
        ports:
          http:
            port: 27017

    ingress:
      server:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hosts:
          - host: spotify-api.${DOMAIN_NAME}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: server
                  port: http

      web:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hosts:
          - host: spotify.${DOMAIN_NAME}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: web
                  port: http

    persistence:
      config:
        existingClaim: your-spotify
        advancedMounts:
          mongodb:
            app:
              - path: /data
