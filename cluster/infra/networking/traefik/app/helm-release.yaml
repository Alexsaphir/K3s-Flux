---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &name traefik
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://helm.traefik.io/traefik
      chart: traefik
      version: 26.1.0
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-charts
      interval: 15m

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3

  dependsOn:
    - name: kube-prometheus-stack-crds
      namespace: flux-monitoring

  # https://github.com/traefik/traefik-helm-chart/blob/v23.1.0/traefik/values.yaml
  values:
    image:
      name: public.ecr.aws/docker/library/traefik

    deployment:
      enabled: true
      replicas: 1

    service:
      enabled: true
      type: LoadBalancer
      annotations:
        metallb.universe.tf/allow-shared-ip: traefik
        metallb.universe.tf/loadBalancerIPs: ${LB_TRAEFIK_ADDR}
      spec:
        externalTrafficPolicy: Local

    pilot:
      enabled: false

    experimental:
      v3:
        enabled: false
      plugins: { }
      kubernetesGateway:
        enabled: false

    ingressClass:
      enabled: true
      isDefaultClass: true

    ingressRoute:
      dashboard:
        enabled: false

    tlsStore:
      default:
        certificates:
          - secretName: &default-certificate wildcard-tls
        defaultCertificate:
          secretName: *default-certificate

    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true
        preferServerCipherSuites: true
        cipherSuites:
          - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
          - TLS_RSA_WITH_AES_256_GCM_SHA384
        curvePreferences:
          - CurveP521
          - CurveP384

    providers:
      kubernetesCRD:
        enabled: true
        ingressClass: *name
        allowCrossNamespace: true
        allowExternalNameServices: true

      kubernetesIngress:
        enabled: true
        ingressClass: *name
        allowExternalNameServices: true
        allowCrossNamespace: true
        # https://github.com/kubernetes-sigs/external-dns/issues/1940
        publishedService:
          enabled: false

    globalArguments:
      - --api.insecure=true

      - --serversTransport.insecureSkipVerify=true
      # TODO: remove 192.168.0.56 from trusted proxy when minerva deprecated
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=192.168.0.56,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32"

    additionalArguments:
      - "--providers.kubernetesingress.ingressendpoint.ip=${LB_TRAEFIK_ADDR}"

    logs:
      general:
        format: json
        level: INFO
      access:
        enabled: true
        format: json

    ports:
      traefik:
        expose: true

      # Entrypoints
      web:
        redirectTo:
          port: websecure
        advertisedPort: 80

      websecure:
        # TODO: enable when v3 released
        # asDefault: true

        # middlewares:
        #   - network-system-error-pages@kubernetescrd

        proxyProtocol:
          trustedIPs:
            - '192.168.0.56'

        http3:
          enabled: false
        tls:
          enabled: true
          options: "default"

      metrics:
        port: 8082
        expose: true
        exposedPort: 8082

    resources:
      requests:
        memory: 100Mi
        cpu: 500m
      limits:
        memory: 500Mi

#    metrics:
#      prometheus:
#        entryPoint: metrics
#        service:
#          enabled: true
#        ##  enable optional CRDs for Prometheus Operator
#        ##
#        serviceMonitor:
#          additionalLabels:
#            foo: bar
#          namespace: network-system
#          namespaceSelector: { }
#          metricRelabelings:
#            - sourceLabels: [ __name__ ]
#              separator: ;
#              regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
#              replacement: $1
#              action: drop
#          relabelings:
#            - sourceLabels: [ __meta_kubernetes_pod_node_name ]
#              separator: ;
#              regex: ^(.*)$
#              targetLabel: nodename
#              replacement: $1
#              action: replace
#          jobLabel: traefik
#          scrapeInterval: 30s
#          scrapeTimeout: 5s
#          honorLabels: true
#        prometheusRule:
#          additionalLabels: { }
#          namespace: network-system
#          rules:
#            - alert: TraefikDown
#              expr: up{job="traefik"} == 0
#              for: 5m
#              labels:
#                context: traefik
#                severity: warning
#              annotations:
#                summary: "Traefik Down"
#                description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"
