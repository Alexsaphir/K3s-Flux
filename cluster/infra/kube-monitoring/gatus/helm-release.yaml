---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: gatus
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts
      interval: 15m

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          # TODO: Convert this to a proper 'sidecar' container someday
          init-config:
            order: 1
            image: &configSyncImage
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.25.3@sha256:8dc0aca015bf7173378ee5987dd78d49f94ff9a5c3495b3664141750cc55f444
            env: &configSyncEnv
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: LIST
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

        containers:
          main:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.7.0@sha256:e077910eeda4c1369e20c74bd09853b141399103531d97d831d1ae58bd81537d

            env:
              TZ: '${TIMEZONE}'
              GATUS_CONFIG_PATH: /config
              CUSTOM_WEB_PORT: &port 80
              POSTGRES_URL:
                valueFrom:
                  secretKeyRef:
                    name: database-gatus
                    key: POSTGRES_URL

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: &path /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }

            resources: *resources

          config-sync:
            image: *configSyncImage
            env:
              <<: *configSyncEnv
              METHOD: WATCH
            securityContext: *securityContext
            resources: *resources

        pod:
          dnsConfig:
            options:
              - { name: ndots, value: "1" }

          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

    service:
      main:
        ports:
          http:
            port: *port

    serviceMonitor:
      main:
        enabled: true

    serviceAccount:
      create: true
      name: gatus

    persistence:
      config:
        enabled: true
        type: emptyDir

    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hosts:
          - host: status.${SECRET_DOMAIN_NAME}
            paths:
              - path: /
                pathType: Prefix

      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
