---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    defaultPodOptions:
      dnsConfig:
        options:
          - { name: ndots, value: "1" }

      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    controllers:
      gatus:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-config:
            restartPolicy: Always
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.28.0@sha256:4166a019eeafd1f0fef4d867dc5f224f18d84ec8681dbb31f3ca258ecf07bcf2
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: configmap
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.13.0@sha256:cac86b023cf61bf18b688532b4496f8703d15df935b0b6c9bbf85c3e3e18d218

            envFrom:
              - secretRef:
                  name: pushover-secret
            env:
              TZ: '${TIMEZONE}'
              GATUS_CONFIG_PATH: /config
              WEB_PORT: &port 80
              GATUS_DELAY_START_SECONDS: 5
              POSTGRES_URL:
                valueFrom:
                  secretKeyRef:
                    name: database-gatus
                    key: POSTGRES_URL

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            resources: *resources

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }

    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port

    serviceMonitor:
      app:
        serviceName: gatus
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    serviceAccount:
      create: true
      name: gatus

    ingress:
      main:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hosts:
          - host: status.${DOMAIN_NAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        enabled: true
        type: emptyDir

      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
