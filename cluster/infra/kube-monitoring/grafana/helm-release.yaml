---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 8.10.4
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-charts
      interval: 15m

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  test:
    enable: false
  # https://github.com/grafana/helm-charts/blob/grafana-6.57.3/charts/grafana/values.yaml
  values:
    deploymentStrategy:
      type: RollingUpdate

    persistence:
      enabled: false

    env:
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      DS_PROMETHEUS: "prometheus"
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards

      GF_SECURITY_COOKIE_SAMESITE: grafana-k3s
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true

      GF_SERVER_ROOT_URL: https://grafana.${DOMAIN_NAME}

      GF_DATABASE_SSL_MODE: disable
      GF_DATABASE_TYPE: postgres

      GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.${DOMAIN_NAME}/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${DOMAIN_NAME}/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.${DOMAIN_NAME}/api/oidc/token

    envFromSecrets:
      - name: grafana-oauth

    envValueFrom:
      GF_DATABASE_NAME:
        secretKeyRef:
          name: database-grafana
          key: DATABASE_NAME
      GF_DATABASE_HOST:
        secretKeyRef:
          name: database-grafana
          key: HOST
      GF_DATABASE_USER:
        secretKeyRef:
          name: database-grafana
          key: LOGIN
      GF_DATABASE_PASSWORD:
        secretKeyRef:
          name: database-grafana
          key: PASSWORD

    admin:
      existingSecret: grafana-admin
      userKey: adminUser
      passwordKey: adminPassword


    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        oauth_auto_login: true
        oauth_allow_insecure_email_lookup: true
      auth.generic_oauth:
        enabled: true
        name: Authelia
        icon: signin
        scopes: openid profile email groups
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        org_id: 1
        role_attribute_path: |
          contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-viewer') && 'Viewer'
      auth.basic:
        enabled: false
      auth.anonymous:
        enabled: false
        # org_id: 1
        # org_role: Viewer
      news:
        news_feed_enabled: false
      default:
        force_migration: true
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      panels:
        disable_sanitize_html: true

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hajimari.io/enable: "true"
      hosts:
        - grafana.${DOMAIN_NAME}
      path: /
      pathType: Prefix

    plugins:
      - pr0ps-trackmap-panel
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - natel-plotly-panel
      - vonage-status-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - redis-datasource

    podAnnotations:
      configmap.reloader.stakater.com/reload: *app

    serviceMonitor:
      enabled: true

    serviceAccount:
      autoMount: true

    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        label: grafana_datasource

      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          allowUiUpdates: true
          foldersFromFilesStructure: true
          disableDelete: false

    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Loki
            orgId: 1
          - name: Prometheus
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://thanos-query-frontend.flux-monitoring.svc.cluster.local:9090
            jsonData:
              prometheusType: Thanos
            isDefault: true

          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.flux-monitoring.svc.cluster.local
            jsonData:
              maxLines: 250

          - name: AlertManager
            type: alertmanager
            access: proxy
            url: http://alertmanager-operated.flux-monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/default

          - name: apps
            orgId: 1
            folder: Applications
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/apps


          - name: database
            orgId: 1
            folder: Database
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/database

          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/storage

          - name: node
            orgId: 1
            folder: Node
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/node

          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/flux

          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/kubernetes

          - name: prometheus
            orgId: 1
            folder: Prometheus
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/prometheus

          - name: thanos
            orgId: 1
            folder: Thanos
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/thanos

          - name: loki
            orgId: 1
            folder: Loki
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/loki

          - name: trivy
            orgId: 1
            folder: Trivy
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/trivy

          - name: system
            orgId: 1
            folder: System
            type: file
            disableDeletion: true
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/system

    dashboards:
      database:
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/charts/cloudnative-pg-v0.20.2/charts/cloudnative-pg/monitoring/grafana-dashboard.json
          datasource: &datasource
            - name: DS_PROMETHEUS
              value: Prometheus
            - name: DS_LOKI
              value: loki

      default:
        sonarqube-logs:
          url: https://raw.githubusercontent.com/SonarSource/helm-chart-sonarqube/sonarqube-10.3.0-sonarqube-dce-10.3.0/examples/grafana/sonarqube-loki-dashboard.json
          datasource: *datasource

      system:
        authentik:
          # renovate: depName="authentik"
          gnetId: 14837
          revision: 2
          datasource: Prometheus

        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: *datasource

        external-dns:
          # renovate: depName="External DNS"
          gnetId: 15038
          revision: 3
          datasource: *datasource

        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus

      node:
        smart:
          # renovate: depName="Dashboard for smartctl_exporter"
          gnetId: 22381
          revision: 1
          datasource:
            - { name: DS_VICTORIAMETRICS, value: Prometheus }

        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: *datasource

        node-problem-detector:
          # renovate: depName="Node Problem Detector"
          gnetId: 15549
          revision: 1
          datasource: *datasource

        1-node-exporter:
          # renovate: depName="Node Exporter for Prometheus Dashboard based on 11074"
          gnetId: 15172
          revision: 6
          datasource: *datasource

      apps:
        coder:
          url: https://raw.githubusercontent.com/coder/coder/main/examples/monitoring/dashboards/grafana/dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        sonarqube-dashboard:
          url: https://raw.githubusercontent.com/SonarSource/helm-chart-sonarqube/sonarqube-10.3.0-sonarqube-dce-10.3.0/examples/grafana/sonarqube-dashboard.json
          datasource: *datasource

        exportarr-media:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/refs/tags/v2.0.1/examples/grafana/dashboard2.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      storage:
        longhorn:
          # renovate: depName= "Longhorn Example v1.4.0"
          gnetId: 17626
          revision: 1
          datasource:
            - name: DS_PROMETHEUS-LONGHORN
              value: Prometheus

      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 16761
          revision: 16
          datasource: *datasource
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: *datasource
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: *datasource
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: *datasource
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 35
          datasource: *datasource
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: *datasource
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: *datasource


      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: *datasource
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: *datasource

        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: *datasource

      prometheus:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19106
          revision: 6
          datasource: Prometheus

      thanos:
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: *datasource
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: *datasource
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: *datasource
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: *datasource
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: *datasource
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: *datasource
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: *datasource
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: *datasource
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: *datasource
