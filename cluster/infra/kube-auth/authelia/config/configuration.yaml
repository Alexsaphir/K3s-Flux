# yaml-language-server: $schema=https://raw.githubusercontent.com/authelia/authelia/master/docs/static/schemas/v4.39/json-schema/configuration.json
---
log:
  level: info
  # format: json

notifier:
  disable_startup_check: true
  smtp:
    address: 'smtp://mailpit.mail.svc.cluster.local:1025'

    sender: 'Authelia <authelia@domain.com>'
    disable_require_tls: true
    disable_starttls: true

authentication_backend:
  refresh_interval: 1m
  password_reset:
    disable: true
  ldap:
    implementation: custom
    timeout: 5s
    start_tls: false
    base_dn: dc=home,dc=arpa
    additional_users_dn: ou=people
    users_filter: (&({username_attribute}={input})(objectClass=person))

    additional_groups_dn: ou=groups
    groups_filter: (member={dn})
    group_search_mode: filter

    user: uid=search,ou=people,dc=home,dc=arpa

    attributes:
      username: uid
      display_name: displayName
      mail: mail
      member_of: memberOf
      group_name: cn

totp:
  disable: false
  issuer: auth.${DOMAIN_NAME}

webauthn:
  disable: true

duo_api:
  disable: true

regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 5m

session:
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: authelia-k3s
      domain: ${DOMAIN_NAME}
      authelia_url: https://auth.${DOMAIN_NAME}
      default_redirection_url: https://${DOMAIN_NAME}
  redis:
    host: authelia-dragonfly.kube-auth.svc.cluster.local
    database_index: 0

access_control:
  default_policy: deny
  networks:
    - name: internal
      networks: [ '192.168.0.0/16' ]

  rules:
    - domain:
        - 'auth.${DOMAIN_NAME}'
        - 'authentik.${DOMAIN_NAME}'
        - 'vaultwarden.${DOMAIN_NAME}'
      policy: bypass

    - domain:
        - 'homer.${DOMAIN_NAME}'
      policy: bypass

    # Expose public metrics
    - domain:
        - 'kromgo.${DOMAIN_NAME}'
        - 'status.${DOMAIN_NAME}'
      policy: bypass

    # Public media ingresses
    - domain:
        - 'plex.${DOMAIN_NAME}'
        - 'tautulli.${DOMAIN_NAME}'
        - 'ombi.${DOMAIN_NAME}'
      policy: bypass

    # Minio
    - domain:
        - 'minio.${DOMAIN_NAME}'
        - 's3.${DOMAIN_NAME}'
      policy: bypass


    # Public ingresses behind sso
    - domain:
        - 'photos.${DOMAIN_NAME}'
        - 'recipes.${DOMAIN_NAME}'
        - 'mealie.${DOMAIN_NAME}'
        - 'foundry.${DOMAIN_NAME}'
        - 'z.${DOMAIN_NAME}'

        - 'codecov.${DOMAIN_NAME}'
        - 'sonarqube.${DOMAIN_NAME}'

        - 'planka.${DOMAIN_NAME}'
        - 'plan.${DOMAIN_NAME}'

        - 'coder.${DOMAIN_NAME}'
        - 'jupyter.${DOMAIN_NAME}'

        - 'wikijs.${DOMAIN_NAME}'
      policy: bypass

    # Webhook protected by secret
    - domain:
        - 'atlantis.${DOMAIN_NAME}'
      policy: bypass
      resources:
        - '^/events([/?].*)?$'
    - domain:
        - 'flux-receiver.${DOMAIN_NAME}'
      policy: bypass
    - domain:
        - 'renovate.${DOMAIN_NAME}'
      policy: bypass
      resources:
        - '^/webhook([/?].*)?$'

    # API protected with secret
    - domain_regex: '^(sonarr|radarr|prowlarr|readarr|lidarr)\.${DOMAIN_NAME}$'
      policy: bypass
      resources:
        - "^/api([/?].*)?$"

    # Ingress for media protected by authelia
    - domain:
        - 'cleanarr.${DOMAIN_NAME}'
        - 'prowlarr.${DOMAIN_NAME}'
        - 'recyclarr.${DOMAIN_NAME}'
        - 'sonarr.${DOMAIN_NAME}'
        - 'radarr.${DOMAIN_NAME}'
        - 'lidarr.${DOMAIN_NAME}'
        - 'readarr.${DOMAIN_NAME}'
      policy: two_factor
      subject:
        - 'group:authelia-media-automation'

    # Apps for authenticated users
    - domain:
        - 'cyberchef.${DOMAIN_NAME}'
        - 'zitadel.${DOMAIN_NAME}'
        - 'cdash.${DOMAIN_NAME}'
      policy: two_factor

    - domain:
        - 'spotify.${DOMAIN_NAME}'
        - 'spotify-api.${DOMAIN_NAME}'
      policy: bypass

    - domain:
        - 'actual.${DOMAIN_NAME}'
        - 'zigbee2mqtt.${DOMAIN_NAME}'
      policy: two_factor
      subject:
        - 'user:alexsaphir'

    - domain:
        - 'gitlab-staging.${DOMAIN_NAME}'
      policy: two_factor
      subject:
        - 'user:alexsaphir'

    # Ingresses for gitlab
    - domain:
        - 'workspace.${DOMAIN_NAME}'
        - '*.workspace.${DOMAIN_NAME}'
      policy: bypass

    - domain:
        - 'hajimari.${DOMAIN_NAME}'
        - 'lldap.${DOMAIN_NAME}'
      policy: two_factor

    - domain:
        - 'gitops.${DOMAIN_NAME}'
        - 'hubble.${DOMAIN_NAME}'
        - 'longhorn.${DOMAIN_NAME}'
        - 'netbox.${DOMAIN_NAME}'
        - 'portainer.${DOMAIN_NAME}'
        - 'grafana.${DOMAIN_NAME}'
        - 'atlantis.${DOMAIN_NAME}'
        - 'git.${DOMAIN_NAME}'
        - 'ollama.${DOMAIN_NAME}'
        - 'bytebase.${DOMAIN_NAME}'
        - 'mail.${DOMAIN_NAME}'
      policy: two_factor
      subject:
        - 'group:cluster-admins'

    - domain:
        - '*.monitoring.${DOMAIN_NAME}'
      policy: two_factor
      subject:
        - 'group:cluster-admins-analytics'

    - domain:
        - '*.${DOMAIN_NAME}'
      policy: deny

identity_providers:
  oidc:
    cors:
      endpoints: [ 'userinfo', 'authorization', 'token', 'revocation', 'introspection' ]
      allowed_origins_from_client_redirect_uris: true
    clients:
      - client_id: grafana
        client_name: Grafana
        client_secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris:
          [ 'https://grafana.${DOMAIN_NAME}/login/generic_oauth' ]
        userinfo_signed_response_alg: none

      - client_id: immich
        client_name: Immich
        client_secret: "${IMMICH_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'email' ]
        redirect_uris:
          - 'https://photos.${DOMAIN_NAME}/auth/login'
          - 'https://photos.${DOMAIN_NAME}/user-settings'
          - 'app.immich:///oauth-callback'
        userinfo_signed_response_alg: none

      - client_id: weave-gitops
        client_name: Weave GitOps
        client_secret: "${WEAVE_GITOPS_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris: [ 'https://gitops.${DOMAIN_NAME}/oauth2/callback' ]
        userinfo_signed_response_alg: none

      - client_id: portainer
        client_name: Portainer
        client_secret: "${PORTAINER_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris: [ 'https://portainer.${DOMAIN_NAME}' ]
        userinfo_signed_response_alg: none

      - client_id: minio
        client_name: Minio
        client_secret: "${MINIO_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris: [ 'https://minio.${DOMAIN_NAME}/oauth_callback' ]
        userinfo_signed_response_alg: none

      - client_id: planka
        client_name: Planka
        client_secret: "${PLANKA_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris: [ 'https://planka.${DOMAIN_NAME}/oidc-callback' ]
        userinfo_signed_response_alg: none
        response_modes:
          - fragment

      - client_id: forgejo
        client_name: Forgejo
        client_secret: "${FORGEJO_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris: [ 'https://git.${DOMAIN_NAME}/user/oauth2/Authelia/callback' ]
        userinfo_signed_response_alg: none

      - client_id: gitlab
        client_name: GitLab
        client_secret: "${GITLAB_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris: [ 'https://gitlab.${DOMAIN_NAME}/users/auth/openid_connect/callback' ]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: 'client_secret_basic'

      - client_id: ollama
        client_name: Ollama
        client_secret: "${OLLAMA_UI_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'email' ]
        redirect_uris:
          - 'https://ollama.${DOMAIN_NAME}/oauth/oidc/callback'
        userinfo_signed_response_alg: none

      - client_id: mealie
        client_name: Mealie
        client_secret: "${MEALIE_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris:
          - 'https://mealie.${DOMAIN_NAME}/login'
        require_pkce: true
        pkce_challenge_method: 'S256'
        userinfo_signed_response_alg: 'none'

      - client_id: wikijs
        client_name: Wiki.js
        client_secret: "${WIKIJS_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris:
          [ 'https://wikijs.${DOMAIN_NAME}/login/cb4452c2-60b6-4bea-bee1-ba01f2aab052/callback' ]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: 'client_secret_post'

      - client_id: tandoor-recipes
        client_name: Tandoor Recipes
        client_secret: "${TANDOOR_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email' ]
        redirect_uris:
          - 'https://recipes.${DOMAIN_NAME}/accounts/oidc/authelia/login/callback/'
        userinfo_signed_response_alg: 'none'
        token_endpoint_auth_method: 'client_secret_post'

      - client_id: zipline
        client_name: Zipline
        client_secret: "${ZIPLINE_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: [ 'openid', 'profile', 'groups', 'email', 'offline_access' ]
        redirect_uris: [ 'https://z.${DOMAIN_NAME}/api/auth/oauth/oidc' ]
        userinfo_signed_response_alg: none
