---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts

  driftDetection:
    mode: enabled
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }

      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app

    controllers:
      authelia:
        replicas: 2
        strategy: RollingUpdate

        pod:
          annotations:
            configmap.reloader.stakater.com/reload: authelia-configmap
            secret.reloader.stakater.com/reload: authelia-secret,authelia-oauth-secret,redis-standalone,database-authelia,glauth-search

        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.12@sha256:83993be7edaa1868d987cdafbd87bb1578892a3fcbbfdd4741a52e4e90473b9a

            envFrom:
              - secretRef:
                  name: authelia-secret
              - secretRef:
                  name: authelia-oauth-secret

            env:
              DOMAIN_NAME: ${DOMAIN_NAME}

              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"

              AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:80
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
              AUTHELIA_THEME: grey

              X_AUTHELIA_CONFIG: /config/configuration.yaml
              X_AUTHELIA_CONFIG_FILTERS: expand-env

              # Configure LDAP
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDRESS: "ldap://lldap.kube-auth.svc.cluster.local:389"

              # Set secrets
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: search-user-secret
                    key: password
              AUTHELIA_SESSION_REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: redis-standalone
                    key: redisSecret

              AUTHELIA_STORAGE_POSTGRES_DATABASE:
                valueFrom:
                  secretKeyRef:
                    name: database-authelia
                    key: DATABASE_NAME
              AUTHELIA_STORAGE_POSTGRES_ADDRESS:
                valueFrom:
                  secretKeyRef:
                    name: database-authelia
                    key: HOST
              AUTHELIA_STORAGE_POSTGRES_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: database-authelia
                    key: LOGIN
              AUTHELIA_STORAGE_POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: database-authelia
                    key: PASSWORD

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            resources:
              requests:
                cpu: 5m
                memory: 40Mi
              limits:
                memory: 100Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ 'ALL' ] }

    service:
      app:
        controller: authelia
        ports:
          http:
            port: *port
          metrics:
            enabled: true
            port: 8080

    serviceMonitor:
      app:
        serviceName: authelia
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    ingress:
      app:
        className: traefik
        annotations:
          auth.home.arpa/disabled: "true"
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-headers@kubernetescrd
          hajimari.io/icon: mdi:shield-account
        hosts:
          - host: "auth.${DOMAIN_NAME}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        type: configMap
        name: authelia-configmap
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true
