---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gatus
  namespace: flux-monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-charts
      interval: 15m

  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  valuesFrom:
    - kind: Secret
      name: database-gatus
      valuesKey: POSTGRES_URL
      targetPath: gatus.postgresURL

  values:
    initContainers:
      01-config-sync:
        image: ghcr.io/kiwigrid/k8s-sidecar:1.25.0
        imagePullPolicy: IfNotPresent
        env:
          - { name: FOLDER, value: /config }
          - { name: LABEL, value: gatus.io/enabled }
          - { name: NAMESPACE, value: ALL }
          - { name: RESOURCE, value: both }
          - { name: UNIQUE_FILENAMES, value: "true" }
          - { name: METHOD, value: LIST }
        volumeMounts:
          - { name: config, mountPath: /config }

    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/twin/gatus
      tag: v5.4.0

    env:
      TZ: "${CONFIG_TIMEZONE}"
      GATUS_CONFIG_PATH: /config

    gatus:
      customWebPort: &port 80

    service:
      main:
        ports:
          http:
            port: *port

    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: network-system-authelia-auth@kubernetescrd
        hosts:
          - host: &host status.${SECRET_DOMAIN_NAME}
            paths:
              - path: /
                pathType: Prefix

    serviceAccount:
      create: true
      name: gatus

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch

    persistence:
      config:
        enabled: true
        type: emptyDir
      config-file:
        enabled: true
        type: configMap
        name: gatus-config
        mountPath: /config/config.yaml
        subPath: config.yaml
        readOnly: true

    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 500Mi

    sidecars:
      config-sync:
        image: ghcr.io/kiwigrid/k8s-sidecar:1.25.0
        imagePullPolicy: IfNotPresent
        env:
          - { name: FOLDER, value: /config }
          - { name: LABEL, value: gatus.io/enabled }
          - { name: NAMESPACE, value: ALL }
          - { name: RESOURCE, value: both }
          - { name: UNIQUE_FILENAMES, value: "true" }
          - { name: METHOD, value: WATCH }
        volumeMounts:
          - { name: config, mountPath: /config }

    configMaps:
      config:
        enabled: true
        data:
          config.yaml: |
            web:
              port:  {{ .Values.gatus.customWebPort }}
            storage:
              type: postgres
              path: {{ .Values.gatus.postgresURL }}
              caching: true
            metrics: true
            debug: false
            ui:
              title: Status | Gatus
              header: Status
            alerting:
            connectivity:
              checker:
                target: 1.1.1.1:53
                interval: 1m
            endpoints:
              - name: status
                group: external
                url: https://status.${SECRET_DOMAIN_NAME}
                interval: 1m
                client:
                  dns-resolver: tcp://1.1.1.1:53
                conditions:
                  - "[STATUS] == 200"
