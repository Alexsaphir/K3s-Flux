---
- name: Configure all nodes.
  hosts:
    - cube
  become: true
  gather_facts: true
  any_errors_fatal: true
  tasks:
    - name: Enable passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ os_timezone | default('Etc/UTC') }}"

    - name: Filesystem
      block:
        - name: Filesystem | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true

        - name: Disable swap at runtime
          # noqa no-changed-when
          ansible.builtin.command: swapoff -a
          when: ansible_swaptotal_mb > 0

        - name: Disable swap on boot
          ansible.posix.mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
          loop:
            - swap
            - none

        - name: Configure multipathd
          ansible.builtin.template:
            src: multipath.conf.j2
            dest: /etc/multipath.conf
            mode: '0644'
          notify: Restart multipath


    - name: Networking
      block:
        - name: Networking | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
          when:
            - ansible_hostname != inventory_hostname

        - name: Networking | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            mode: '0644'
            create: true
            block: |
              127.0.0.1 localhost
              127.0.1.1   {{ inventory_hostname }}
              # The following lines are desirable for IPv6 capable hosts
              # ::1 ip6-localhost ip6-loopback
              # fe00::0 ip6-localnet
              # ff00::0 ip6-mcastprefix
              # ff02::1 ip6-allnodes
              # ff02::2 ip6-allrouters
              # ff02::3 ip6-allhosts

        # https://github.com/cilium/cilium/issues/18706
        - name: Network Configuration | Cilium (1)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutingPolicyRules
            line: ManageForeignRoutingPolicyRules=no
        - name: Network Configuration | Cilium (2)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutes
            line: ManageForeignRoutes=no


    - name: Packages
      block:
        - name: Packages | Install required packages
          ansible.builtin.apt:
            name: "{{ os_packages_install | default([]) }}"
            state: present
            update_cache: true

    - name: User Configuration
      block:
        - name: User Configuration | Add additional SSH public keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "https://github.com/{{ github_username }}.keys"

    - name: System Configuration
      block:
        - name: System Configuration | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [ br_netfilter, ip_vs, ip_vs_rr, nbd, overlay, rbd ]

        - name: System Configuration | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: '0644'
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [ br_netfilter, ip_vs, ip_vs_rr, nbd, overlay, rbd ]

        - name: System Configuration | Set sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.ipv6.conf.all.disable_ipv6: 1
              net.ipv6.conf.default.disable_ipv6: 1
              net.ipv6.conf.lo.disable_ipv6: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              fs.inotify.max_queued_events: 65536
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 8192
          notify: Reboot

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600

    - name: Restart multipath
      ansible.builtin.service:
        name: multipathd
        state: restarted
